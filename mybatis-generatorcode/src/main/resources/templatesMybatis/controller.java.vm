
package ${package.Controller};

import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import com.baomidou.mybatisplus.extension.api.R;
import java.util.List;
import com.my.common.dto.GroupValid;
import java.io.Serializable;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
#if(${swagger2})
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
#end
#if(${restControllerStyle})
##import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${swagger2})
@Api(value = "#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end", description = "$!{table.comment}")
#end
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    private  ${table.serviceName} ${table.firstCharToLower(${table.serviceName})};

    /**
     * 新增数据
     *
     * @param ${table.firstCharToLower(${table.entityName})} 实体对象
     * @return 新增结果
     */
    #if(${swagger2})
    @ApiOperation(value="新增数据")
    #end
    @PostMapping
    public R insert(@RequestBody @Validated({GroupValid.Save.class}) ${table.entityName} ${table.firstCharToLower(${table.entityName})})throws Exception {

        return success(this.${table.firstCharToLower(${table.serviceName})}.save(${table.firstCharToLower(${table.entityName})}));
    }

    /**
     * 删除数据
     *
     * @param idList 主键数组
     * @return 删除结果
     */
    #if(${swagger2})
    @ApiOperation(value="删除数据")
    #end
    @DeleteMapping
    public R delete(@RequestBody List<Long> idList)throws Exception {
        this.validate(idList);
        return success(this.${table.firstCharToLower(${table.serviceName})}.removeByIds(idList));
    }

    /**
    * 修改数据
    *
    * @param ${table.firstCharToLower(${table.entityName})} 实体对象
    * @return 修改结果
    */
    #if(${swagger2})
    @ApiOperation(value="修改数据")
    #end
    @PutMapping
    public R update(@RequestBody @Validated({GroupValid.Update.class})  ${table.entityName} ${table.firstCharToLower(${table.entityName})})throws Exception {

        return success(this.${table.firstCharToLower(${table.serviceName})}.updateById(${table.firstCharToLower(${table.entityName})}));
    }

    /**
     * 通过主键查询单条数据
     *
     * @param id 主键
     * @return 单条数据
     */
    #if(${swagger2})
    @ApiOperation(value="通过主键查询单条数据")
    #end
    @GetMapping("{id}")
    public R selectOne(@PathVariable Serializable id) {

        return success(this.${table.firstCharToLower(${table.serviceName})}.getById(id));
    }

    /**
     * 分页查询所有数据
     *
     * @param page 分页对象
     * @param ${table.firstCharToLower(${table.entityName})} 查询实体
     * @return 所有数据
     */
    #if(${swagger2})
    @ApiOperation(value="分页查询所有数据")
    #end
    @GetMapping
    public R select(Page<${table.entityName}> page, ${table.entityName} ${table.firstCharToLower(${table.entityName})}) {

        return success(this.${table.firstCharToLower(${table.serviceName})}.page(page, new QueryWrapper<>(${table.firstCharToLower(${table.entityName})})));
    }

}

#end